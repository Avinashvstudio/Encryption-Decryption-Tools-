{
  "version": 3,
  "sources": ["../../crypto-classic-utils/utils.js", "../../crypto-classic-playfair/lib/playfair.js", "../../crypto-classic-playfair/playfair.js"],
  "sourcesContent": ["// Utility functions\n\n// Code was written by Tyler Akins and is placed in the public domain\n// It would be nice if you left this header.  http://rumkin.com\n\nmodule.exports = {\n    // Remove whitespace from beginning and end of text\n    Trim :  function(s) \n        {\n           while (s.length && \" \\t\\r\\n\".indexOf(s.charAt(0)) >= 0)\n           {\n              s = s.slice(1, s.length);\n           }\n           while (s.length && \" \\t\\r\\n\".indexOf(s.charAt(s.length - 1)) >= 0)\n           {\n              s = s.slice(0, s.length - 1);\n           }\n           \n           return s;\n        },\n\n\n        // Exchange characters in F for ones in T for the string S.  If T is not\n        // specified or not long enough, the characters are removed.\n        // \"aaabbbC!!\" = Tr(\"AaaBbbCcc\", \"ABc\", \"ab!\")\n        // \"Test thing\" = Tr(\"Test\\n thing\", \"\\r\\n\")\n    Tr : function(s, f, t)\n        {\n           var o = '';\n           \n           if (typeof(t) != 'string')\n           {\n              t = '';\n           }\n           \n           for (var i = 0; i < s.length; i ++)\n           {\n              var c = s.charAt(i);\n              var idx = f.indexOf(c);\n              if (idx >= 0)\n              {\n                 if (idx < t.length)\n        \t {\n                    o += t.charAt(idx);\n        \t }\n              }\n              else\n              {\n                 o += c;\n              }\n           }\n           \n           return o;\n        },\n\n\n        // Insert CR and LF characters into e, based on the position of those\n        // characters in T.\n        // If T = \"ab\\ncd\" and E = \"zyxw\", the result will be \"zy\\nxw\"\n    InsertCRLF :  function(t, e)\n        {\n           var o = \"\", i, j;\n           \n           for (i = 0, j = 0; i < t.length; i ++)\n           {\n              if (\"\\r\\n\".indexOf(t.charAt(i)) >= 0)\n              {\n                 o += t.charAt(i);\n              }\n              else\n              {\n                 o += e.charAt(j ++);\n              }\n           }\n           \n           return o;\n        },\n\n\n        // Returns an alphabet with a key in front.\n        // Passing the key of \"Four. Score! And Seven Days Ago?\"\n        // will return  \"FOURSCEANDVYGBHIJKLMPQTWXZ\"\n        // key = the letters to include in the beginning\n        // alphaet = the alphabet to use (if not A-Z)\n    MakeKeyedAlphabet : function (key, alphabet)\n        {\n           var out = \"\";\n        \n           if (typeof(alphabet) != 'string')\n              alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n           else\n              alphabet = alphabet.toUpperCase();\n              \n           if (typeof(key) != 'string')\n              return alphabet;\n              \n           key = key.toUpperCase() + alphabet;\n           for (var i = 0; i < key.length; i ++)\n           {\n              if (out.indexOf(key.charAt(i)) < 0 && \n                  alphabet.indexOf(key.charAt(i)) >= 0)\n              {\n                 out += key.charAt(i);\n              }\n           }\n           \n           return out;\n        },\n\n\n        // Make any string contain just alpha characters\n    OnlyAlpha : function (str)\n        {\n           var out = \"\";\n           \n           for (i = 0; i < str.length; i ++)\n           {\n              var b = str.charAt(i);\n              if (b.toUpperCase() >= 'A' && b.toUpperCase() <= 'Z')\n              {\n                 out += b;\n              }\n           }\n           \n           return out;\n        },\n\n\n        // Change a string into valid HTML text\n    HTMLEscape : function (str)\n        {\n           var out = \"\";\n           \n           for (var i = 0; i < str.length; i ++)\n           {\n              var c = str.charAt(i);\n              if (c == '&')\n                 c = '&amp;';\n              if (c == '>')\n                 c = '&gt;';\n              if (c == '<')\n                 c = '&lt;';\n              if (c == \"\\n\")\n                 c = \"<br>\\n\";\n              out += c;\n           }\n           \n           return out;\n        },\n\n\n        // Pass it a textarea object, get it resized automagically\n    ResizeTextArea : function (obj)\n        {\n           var s = obj.value + \"\\n\";\n           var newlines = 0;\n           var max_chars = 0;\n           var i, chars = 0, wide = 0;\n           var obj_max_cols = 100, obj_min_cols = 40, obj_max_rows = 15;\n           var scrollbar_width = 2;\n           \n           for (i = 0; i < s.length; i ++)\n           {\n              var c = s.charAt(i);\n              if (c == \"\\n\")\n              {\n                 if (max_chars < chars)\n        \t    max_chars = chars;\n        \t chars = 0;\n        \t newlines ++;\n              }\n              else \n              {\n                 if (chars == obj_max_cols - scrollbar_width)\n                 {\n        \t    max_chars = chars;\n                    j = i;\n        \t    var c2 = s.charAt(j);\n        \t    while (c2 != \"\\n\" && c2 != ' ' && c2 != \"\\t\" && j > 0)\n        \t    {\n        \t       j --;\n        \t       c2 = s.charAt(j);\n        \t    }\n        \t    if (c2 != \"\\n\" && j > 0)\n        \t    {\n        \t       // Not one big long line\n        \t       newlines ++;\n        \t       chars = 0;\n        \t       i = j;\n        \t    }\n        \t    else\n        \t    {\n        \t       wide = 1;\n        \t    }\n                 }\n                 else\n                 {\n                    chars ++;\n                 }\n              }\n              \n              // Short-circuit\n              if (obj_max_rows <= newlines + wide + 1 &&\n                 obj_max_cols <= max_chars + scrollbar_width)\n              {\n                 obj.rows = obj_max_rows;\n        \t obj.cols = obj_max_cols;\n        \t return;\n              }\n           }\n           \n           obj.rows = Math.min(obj_max_rows, newlines + wide + 1);\n           obj.cols = Math.min(Math.max(obj_min_cols, max_chars + scrollbar_width), obj_max_cols);\n        },\n\n\n    Reverse_String : function (s)\n        {\n           var o = '', i = s.length;\n           \n           while (i --)\n           {\n              o += s.charAt(i);\n           }\n           \n           return o;\n        },\n\n\n        // Returns 1 if there was no change, 0 if it is not the same\n        // Saves value in the element if it was changed, so subsequent calls\n        // to this function will return 1 until it changes again.\n        // Don't use this function like this:\n        //   if (IsUnchanged(x) && IsUnchanged(y) && IsUnchanged(z)) { ... }\n        // The logic code could short-circuit on X or Z (depending on how it\n        // gets parsed) and will jump to the 'if' block without evaluating\n        // all of the variables.  Use this instead:\n        //   if (IsUnchanged(x) * IsUnchanged(y) * IsUnchanged(z)) { ... }\n        //   if (IsUnchanged(x) + IsUnchanged(y) + IsUnchanged(z) == 3) { ... }\n    IsUnchanged : function(e)\n        {\n           var v;\n           \n           if (e.type == 'checkbox')\n           {\n              v = e.checked.toString();\n           }\n           else\n           {\n              v = e.value;\n           }\n           \n           if (v != e.getAttribute('_oldValue'))\n           {\n              e.setAttribute('_oldValue', v);\n              return 0;\n           }\n           \n           return 1;\n        },\n\n\n        // Makes a tableau out of a passed in key\n        // Key should be 25 characters!\n    HTMLTableau : function (key)\n        {\n           var out = '';\n           \n           for (var i = 0; i < 25; i ++)\n           {\n              if (i > 0 && i % 5 == 0)\n              {\n                 out += \"<br>\\n\";\n              }\n              if (i % 5)\n              {\n                 out += \" \";\n              }\n              out += key.charAt(i);\n           }\n           \n           return \"<tt>\" + out + \"</tt>\";\n        },\n\n\n        // Change multiple spaces into &nbsp; to preserve padding.\n    SwapSpaces : function (in_str)\n        {\n           var out = '';\n           var multi = 1;\n           \n           for (var i = 0; i < in_str.length; i ++)\n           {\n              var c = in_str.charAt(i);\n              \n              if (c == ' ')\n              {\n                 if (multi)\n        \t {\n        \t    out += '&nbsp;';\n        \t    multi = 0;\n        \t }\n        \t else\n        \t {\n        \t    out += ' ';\n        \t    multi = 1;\n        \t }\n              }\n              else if (multi && (c == '\\r' || c == '\\n' || c == '\\t'))\n              {\n                 out = out.slice(0, out.length - 1) + '&nbsp;' + c;\n                 multi = 0;\n              }\n              else\n              {\n                 out += c;\n        \t multi = 0;\n              }\n           }\n           \n           if (out.charAt(out.length - 1) == ' ')\n           {\n              out = out.slice(0, out.length - 1) + '&nbsp;';\n           }\n           \n           return out;\n        },\n\n\n        // Return a letter frequency count\n        // Caches information for faster retrieval by multiple functions\n        // and faster calculation when text is being typed into the forms.\n    LetterFrequency : function(text)\n        {\n            var LetterFrequency_LastText = '';\n            var LetterFrequency_LastFreq = new Array();\n           var n = new Array();\n           var i = 0, j;\n           \n           if (LetterFrequency_LastText == text)\n           {\n              return LetterFrequency_LastFreq;\n           }\n           \n           if (text.slice(0, LetterFrequency_LastText.length) ==\n               LetterFrequency_LastText)\n           {\n              n = LetterFrequency_LastFreq;\n              i = LetterFrequency_LastText.length;\n           }\n           \n           for (j = text.length; i < j; i ++)\n           {\n              var c = text.charAt(i);\n              if (! n[c])\n              {\n                 n[c] = 1;\n              }\n              else\n              {\n                 n[c] ++;\n              }\n           }\n           \n           LetterFrequency_LastText = text;\n           LetterFrequency_LastFreq = n;\n           \n           return n;\n        },\n\n\n// Returns true if the number passed in is prime\n// 2 is considered the first prime.\n   \n    PrimeList : [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\n   53, 59, 61, 67, 71, 73, 79, 83, 89, 97],\n   \n    IsPrime : function(n)\n        {\n           // Get rid of the baddies.\n           if (n < 2 || n != Math.floor(n)) {\n              return false;\n           }\n           \n           // Quick check for all numbers < 100\n           for (var i = 0; i < this.PrimeList.length; i ++) {\n              if (this.PrimeList[i] == n) {\n                 return true;\n              }\n              if (this.PrimeList[i] > n) {\n                 return false;\n              }\n           }\n           \n           // Build list of primes needed to do the check\n           var m = Math.floor(Math.sqrt(n));\n           var m2 = this.PrimeList[this.PrimeList.length - 1];\n           if (m2 < m) {\n              while (m2 <= m) {\n        \t m2 += 2;\n                 if (this.IsPrime(m2)) {\n        \t    this.PrimeList[this.PrimeList.length] = m2;\n        \t }\n              }\n           }\n           \n           // Now we just cycle through the primes\n           for (var i = 0; this.PrimeList[i] <= m; i ++) {\n              var d = n / this.PrimeList[i];\n              if (d == Math.floor(d)) {\n                 return false;\n              }\n           }\n           \n           return true;\n        },\n\n\n        // Returns the prime factors of a number as an array\n        // I don't work with negative numbers or zero or non-integers.\n    GetFactors : function (n)\n        {\n           var factors = new Array();\n           if (n < 1 || n != Math.floor(n))\n           {\n              return factors;\n           }\n           \n           // Check if the number is prime\n           if (IsPrime(n)) {\n              factors[factors.length] = n;\n              return factors;\n           }\n           \n           // Start building a list of factors\n           // This also populates PrimeList with enough primes for us to use\n           var index = 0;\n           var skipCheck = 0;\n           while (skipCheck || ! IsPrime(n)) {\n              var d = n / PrimeList[index];\n              if (d == Math.floor(d)) {\n                 if (PrimeList[index] != factors[factors.length - 1]) {\n        \t    factors[factors.length] = PrimeList[index];\n        \t }\n        \t n = d;\n        \t skipCheck = 0;\n              } else {\n                 index ++;\n        \t skipCheck = 1;\n              }\n           }\n           if (n != factors[factors.length - 1]) {\n              factors[factors.length] = n;\n           }\n           \n           return factors;\n        },\n\n\n        // Returns true if the numbers we are comparing are coprime.\n        // Returns false if either one is a non-integer or zero.\n        // Returns true if either is one.\n        \n    IsCoprime : function (a, b)\n        {\n           var CoprimeCache = new Array();\n           var CoprimeCacheNum = new Array();\n           var a_factors = false, b_factors = false;\n           \n           if (a < 1 || b < 1 || a != Math.floor(a) || b != Math.floor(b)) {\n              return false;\n           }\n           if (a == 1 || b == 1) {\n              return true;\n           }\n        \n           // Check if we cached either \"a\" or \"b\" so we don't need to refactor\n           // them again.\n           for (var i = 0; i < CoprimeCacheNum.length; i ++) {\n              if (CoprimeCacheNum[i] == a) {\n                 a_factors = CoprimeCache[i];\n              }\n              if (CoprimeCacheNum[i] == b) {\n                 b_factors = CoprimeCache[i];\n              }\n           }\n           \n           // Get factors\n           if (! a_factors) {\n              a_factors = this.GetFactors(a);\n           }\n           if (! b_factors) {\n              b_factors = this.GetFactors(b);\n           }\n           \n           // Set up the cache again\n           CoprimeCache = [a_factors, b_factors];\n           CoprimeCacheNum = [a, b];\n           \n           var a_idx = 0;\n           var b_idx = 0;\n           while (a_idx < a_factors.length && b_idx < b_factors.length)\n           {\n              if (a_factors[a_idx] < b_factors[b_idx]) {\n                 a_idx ++;\n              } else if (a_factors[a_idx] > b_factors[b_idx]) {\n                 b_idx ++;\n              } else {\n                 // Common factor\n                 return false;\n              }\n           }\n           return true;\n        }\n};\n", "// Playfair Cipher\n\n// This code was written by Tyler Akins and is placed in the public domain.\n// It would be nice if this header remained intact.  http://rumkin.com\n\n// Requires util.js\n\n\n// Performs a Playfair cipher on the passed-in text\n// encdec = -1 for decode, 1 for encode\n// text = the text to encode/decode\n// skip = the letter omitted from the 5x5 grid\n// skipto = what the \"skip\" letter should be replaced with\n// key = the word or phrase used to generate letter placement in the 5x5 grid\n// flags = 0x01 : Double letters are unencoded\nmodule.exports = function Playfair(encdec, text, skip, skipto, key, flags)\n{\n   var CipherUtils = require(\"crypto-classic-utils\");\n   var enc, out, bet, otemp, c;\n   \n   if (typeof(skip) != 'string' || skip.length != 1 || \n       skip.toUpperCase() < 'A' || skip.toUpperCase() > 'Z')\n      skip = \"J\";\n   skip = skip.toUpperCase();\n   \n   if (typeof(skipto) != 'string' || skipto.length != 1 || \n       skipto.toUpperCase() < 'A' || skipto.toUpperCase() > 'Z')\n      skipto = \"I\";\n   skipto = skipto.toUpperCase();\n\n   if (skip == skipto)\n   {\n      skipto = String.fromCharCode(skip.charCodeAt(0) + 1);\n      if (skipto > 'Z')\n         skipto = 'A';\n   }\n   \n   if (typeof(key) != 'string')\n      key = \"\";\n   \n   key = CipherUtils.MakeKeyedAlphabet(skip + key);\n   key = key.slice(1, key.length);\n   \n   enc = '';\n   out = '';\n   bet = '';\n   for (var i = 0; i < text.length; i ++)\n   {\n      c = text.charAt(i).toUpperCase();\n      if (c == skip)\n         c = skipto;\n\t \n      if (key.indexOf(c) >= 0)\n      {\n         if (text.charAt(i) != text.charAt(i).toUpperCase())\n\t    enc += c.toLowerCase();\n\t else\n\t    enc += c;\n\t if (enc.length == 2)\n\t {\n\t    otemp = Playfair_Lookup(encdec, enc, key, flags);\n\t    out += otemp.charAt(0) + bet + otemp.charAt(1);\n\t    bet = '';\n\t    enc = '';\n\t }\n      }\n      else\n      {\n         if (enc.length > 0)\n\t {\n\t    bet += text.charAt(i);\n\t }\n\t else\n\t {\n\t    out += text.charAt(i);\n\t }\n      }\n   }\n   if (enc.length > 0)\n   {\n      otemp = Playfair_Lookup(encdec, enc + 'X', key);\n      out += otemp.charAt(0) + bet + otemp.charAt(1);\n   }\n   \n   return out;\n}\n\n\n// Performs the substitution of a single letter pair block\nfunction Playfair_Lookup(encdec, chars, key, flags)\n{\n   var t1, t2, u1, u2, r1, r2, c1, c2;\n      \n   t1 = chars.charAt(0);\n   t2 = chars.charAt(1);\n      \n   u1 = 0;\n   if (t1 != t1.toUpperCase())\n   {\n      t1 = t1.toUpperCase();\n      u1 = 1;\n   }\n   u2 = 0;\n   if (t2 != t2.toUpperCase())\n   {\n      t2 = t2.toUpperCase();\n      u2 = 1;\n   }\n      \n   c1 = key.indexOf(t1);\n   r1 = Math.floor(c1 / 5);\n   c1 = c1 % 5;\n   \n   c2 = key.indexOf(t2);\n   r2 = Math.floor(c2 / 5);\n   c2 = c2 % 5;\n   \n   if (r1 == r2 && c1 == c2)\n   {\n      // Same letter\n      if ((flags & 0x01) == 0)\n      {\n         r1 += encdec;\n         r2 += encdec;\n         c1 += encdec;\n         c2 += encdec;\n      }\n   }\n   else if (r1 == r2)\n   {\n      // Same row\n      c1 += encdec;\n      c2 += encdec;\n   }\n   else if (c1 == c2)\n   {\n      // Same column\n      r1 += encdec;\n      r2 += encdec;\n   }\n   else\n   {\n      // Rectangle\n      var a;\n      a = c1;\n      c1 = c2;\n      c2 = a;\n   }\n   \n\n   r1 = (r1 + 5) % 5;\n   r2 = (r2 + 5) % 5;\n   c1 = (c1 + 5) % 5;\n   c2 = (c2 + 5) % 5;\n   \n   t1 = key.charAt(r1 * 5 + c1);\n   t2 = key.charAt(r2 * 5 + c2);\n   \n   if (u1)\n      t1 = t1.toLowerCase();\n   if (u2)\n      t2 = t2.toLowerCase();\n   \n   return t1 + t2;\n}\n", "/* Play Fair Cipher */\n\nvar PlayFair = require(\"./lib/playfair.js\");\n\nmodule.exports = {\n  encipher: function (pt,key) {\n\n    //thisisatest\n    //form digraphs\n    var digraphs = [];\n    for (var i = 0; i < pt.length; i += 2) {\n\n      var digraph = pt.slice(i, i+2);\n\n      //check for non pair at end and add 'Z'\n      //check for double letter and replace with first letter and X\n      if (digraph.charAt(1) === '') {\n        digraph = digraph.charAt(0) + 'z';\n      } else if(digraph.charAt(0) == digraph.charAt(1)) {\n        digraph = digraph.charAt(0) + 'x';\n        i -= 1;\n      }\n\n      digraphs.push(digraph);\n    }\n    \n    if(digraphs.length > 0) {\n        return PlayFair(1,digraphs.join(' '),\"J\",\"I\",key);\n    }\n\n  },\n\n  decipher: function (ct,key) {\n    return PlayFair(-1,ct,\"J\",\"I\",key);\n  }\n}"],
  "mappings": ";;;;;AAAA;AAAA;AAKA,WAAO,UAAU;AAAA;AAAA,MAEb,MAAQ,SAAS,GACb;AACG,eAAO,EAAE,UAAU,SAAU,QAAQ,EAAE,OAAO,CAAC,CAAC,KAAK,GACrD;AACG,cAAI,EAAE,MAAM,GAAG,EAAE,MAAM;AAAA,QAC1B;AACA,eAAO,EAAE,UAAU,SAAU,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,KAAK,GAChE;AACG,cAAI,EAAE,MAAM,GAAG,EAAE,SAAS,CAAC;AAAA,QAC9B;AAEA,eAAO;AAAA,MACV;AAAA;AAAA;AAAA;AAAA;AAAA,MAOJ,IAAK,SAAS,GAAG,GAAG,GAChB;AACG,YAAI,IAAI;AAER,YAAI,OAAO,KAAM,UACjB;AACG,cAAI;AAAA,QACP;AAEA,iBAASA,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAC9B;AACG,cAAI,IAAI,EAAE,OAAOA,EAAC;AAClB,cAAI,MAAM,EAAE,QAAQ,CAAC;AACrB,cAAI,OAAO,GACX;AACG,gBAAI,MAAM,EAAE,QACnB;AACU,mBAAK,EAAE,OAAO,GAAG;AAAA,YAC3B;AAAA,UACI,OAEA;AACG,iBAAK;AAAA,UACR;AAAA,QACH;AAEA,eAAO;AAAA,MACV;AAAA;AAAA;AAAA;AAAA,MAMJ,YAAc,SAAS,GAAG,GACtB;AACG,YAAI,IAAI,IAAIA,IAAGC;AAEf,aAAKD,KAAI,GAAGC,KAAI,GAAGD,KAAI,EAAE,QAAQA,MACjC;AACG,cAAI,OAAO,QAAQ,EAAE,OAAOA,EAAC,CAAC,KAAK,GACnC;AACG,iBAAK,EAAE,OAAOA,EAAC;AAAA,UAClB,OAEA;AACG,iBAAK,EAAE,OAAOC,IAAI;AAAA,UACrB;AAAA,QACH;AAEA,eAAO;AAAA,MACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQJ,mBAAoB,SAAU,KAAK,UAC/B;AACG,YAAI,MAAM;AAEV,YAAI,OAAO,YAAa;AACrB,qBAAW;AAAA;AAEX,qBAAW,SAAS,YAAY;AAEnC,YAAI,OAAO,OAAQ;AAChB,iBAAO;AAEV,cAAM,IAAI,YAAY,IAAI;AAC1B,iBAASD,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAChC;AACG,cAAI,IAAI,QAAQ,IAAI,OAAOA,EAAC,CAAC,IAAI,KAC7B,SAAS,QAAQ,IAAI,OAAOA,EAAC,CAAC,KAAK,GACvC;AACG,mBAAO,IAAI,OAAOA,EAAC;AAAA,UACtB;AAAA,QACH;AAEA,eAAO;AAAA,MACV;AAAA;AAAA,MAIJ,WAAY,SAAU,KAClB;AACG,YAAI,MAAM;AAEV,aAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAC5B;AACG,cAAI,IAAI,IAAI,OAAO,CAAC;AACpB,cAAI,EAAE,YAAY,KAAK,OAAO,EAAE,YAAY,KAAK,KACjD;AACG,mBAAO;AAAA,UACV;AAAA,QACH;AAEA,eAAO;AAAA,MACV;AAAA;AAAA,MAIJ,YAAa,SAAU,KACnB;AACG,YAAI,MAAM;AAEV,iBAASA,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAChC;AACG,cAAI,IAAI,IAAI,OAAOA,EAAC;AACpB,cAAI,KAAK;AACN,gBAAI;AACP,cAAI,KAAK;AACN,gBAAI;AACP,cAAI,KAAK;AACN,gBAAI;AACP,cAAI,KAAK;AACN,gBAAI;AACP,iBAAO;AAAA,QACV;AAEA,eAAO;AAAA,MACV;AAAA;AAAA,MAIJ,gBAAiB,SAAU,KACvB;AACG,YAAI,IAAI,IAAI,QAAQ;AACpB,YAAI,WAAW;AACf,YAAI,YAAY;AAChB,YAAIA,IAAG,QAAQ,GAAG,OAAO;AACzB,YAAI,eAAe,KAAK,eAAe,IAAI,eAAe;AAC1D,YAAI,kBAAkB;AAEtB,aAAKA,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAC1B;AACG,cAAI,IAAI,EAAE,OAAOA,EAAC;AAClB,cAAI,KAAK,MACT;AACG,gBAAI,YAAY;AACpB,0BAAY;AACf,oBAAQ;AACR;AAAA,UACI,OAEA;AACG,gBAAI,SAAS,eAAe,iBAC5B;AACJ,0BAAY;AACL,kBAAIA;AACX,kBAAI,KAAK,EAAE,OAAO,CAAC;AACnB,qBAAO,MAAM,QAAQ,MAAM,OAAO,MAAM,OAAQ,IAAI,GACpD;AACG;AACA,qBAAK,EAAE,OAAO,CAAC;AAAA,cAClB;AACA,kBAAI,MAAM,QAAQ,IAAI,GACtB;AAEG;AACA,wBAAQ;AACR,gBAAAA,KAAI;AAAA,cACP,OAEA;AACG,uBAAO;AAAA,cACV;AAAA,YACI,OAEA;AACG;AAAA,YACH;AAAA,UACH;AAGA,cAAI,gBAAgB,WAAW,OAAO,KACnC,gBAAgB,YAAY,iBAC/B;AACG,gBAAI,OAAO;AAClB,gBAAI,OAAO;AACX;AAAA,UACI;AAAA,QACH;AAEA,YAAI,OAAO,KAAK,IAAI,cAAc,WAAW,OAAO,CAAC;AACrD,YAAI,OAAO,KAAK,IAAI,KAAK,IAAI,cAAc,YAAY,eAAe,GAAG,YAAY;AAAA,MACxF;AAAA,MAGJ,gBAAiB,SAAU,GACvB;AACG,YAAI,IAAI,IAAIA,KAAI,EAAE;AAElB,eAAOA,MACP;AACG,eAAK,EAAE,OAAOA,EAAC;AAAA,QAClB;AAEA,eAAO;AAAA,MACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaJ,aAAc,SAAS,GACnB;AACG,YAAI;AAEJ,YAAI,EAAE,QAAQ,YACd;AACG,cAAI,EAAE,QAAQ,SAAS;AAAA,QAC1B,OAEA;AACG,cAAI,EAAE;AAAA,QACT;AAEA,YAAI,KAAK,EAAE,aAAa,WAAW,GACnC;AACG,YAAE,aAAa,aAAa,CAAC;AAC7B,iBAAO;AAAA,QACV;AAEA,eAAO;AAAA,MACV;AAAA;AAAA;AAAA,MAKJ,aAAc,SAAU,KACpB;AACG,YAAI,MAAM;AAEV,iBAASA,KAAI,GAAGA,KAAI,IAAIA,MACxB;AACG,cAAIA,KAAI,KAAKA,KAAI,KAAK,GACtB;AACG,mBAAO;AAAA,UACV;AACA,cAAIA,KAAI,GACR;AACG,mBAAO;AAAA,UACV;AACA,iBAAO,IAAI,OAAOA,EAAC;AAAA,QACtB;AAEA,eAAO,SAAS,MAAM;AAAA,MACzB;AAAA;AAAA,MAIJ,YAAa,SAAU,QACnB;AACG,YAAI,MAAM;AACV,YAAI,QAAQ;AAEZ,iBAASA,KAAI,GAAGA,KAAI,OAAO,QAAQA,MACnC;AACG,cAAI,IAAI,OAAO,OAAOA,EAAC;AAEvB,cAAI,KAAK,KACT;AACG,gBAAI,OACX;AACG,qBAAO;AACP,sBAAQ;AAAA,YACX,OAEA;AACG,qBAAO;AACP,sBAAQ;AAAA,YACX;AAAA,UACI,WACS,UAAU,KAAK,QAAQ,KAAK,QAAQ,KAAK,MAClD;AACG,kBAAM,IAAI,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI,WAAW;AAChD,oBAAQ;AAAA,UACX,OAEA;AACG,mBAAO;AACd,oBAAQ;AAAA,UACJ;AAAA,QACH;AAEA,YAAI,IAAI,OAAO,IAAI,SAAS,CAAC,KAAK,KAClC;AACG,gBAAM,IAAI,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI;AAAA,QACxC;AAEA,eAAO;AAAA,MACV;AAAA;AAAA;AAAA;AAAA,MAMJ,iBAAkB,SAAS,MACvB;AACI,YAAI,2BAA2B;AAC/B,YAAI,2BAA2B,IAAI,MAAM;AAC1C,YAAI,IAAI,IAAI,MAAM;AAClB,YAAIA,KAAI,GAAGC;AAEX,YAAI,4BAA4B,MAChC;AACG,iBAAO;AAAA,QACV;AAEA,YAAI,KAAK,MAAM,GAAG,yBAAyB,MAAM,KAC7C,0BACJ;AACG,cAAI;AACJ,UAAAD,KAAI,yBAAyB;AAAA,QAChC;AAEA,aAAKC,KAAI,KAAK,QAAQD,KAAIC,IAAGD,MAC7B;AACG,cAAI,IAAI,KAAK,OAAOA,EAAC;AACrB,cAAI,CAAE,EAAE,CAAC,GACT;AACG,cAAE,CAAC,IAAI;AAAA,UACV,OAEA;AACG,cAAE,CAAC;AAAA,UACN;AAAA,QACH;AAEA,mCAA2B;AAC3B,mCAA2B;AAE3B,eAAO;AAAA,MACV;AAAA;AAAA;AAAA,MAMJ,WAAY;AAAA,QAAC;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAClE;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,MAAE;AAAA,MAErC,SAAU,SAAS,GACf;AAEG,YAAI,IAAI,KAAK,KAAK,KAAK,MAAM,CAAC,GAAG;AAC9B,iBAAO;AAAA,QACV;AAGA,iBAASA,KAAI,GAAGA,KAAI,KAAK,UAAU,QAAQA,MAAM;AAC9C,cAAI,KAAK,UAAUA,EAAC,KAAK,GAAG;AACzB,mBAAO;AAAA,UACV;AACA,cAAI,KAAK,UAAUA,EAAC,IAAI,GAAG;AACxB,mBAAO;AAAA,UACV;AAAA,QACH;AAGA,YAAI,IAAI,KAAK,MAAM,KAAK,KAAK,CAAC,CAAC;AAC/B,YAAI,KAAK,KAAK,UAAU,KAAK,UAAU,SAAS,CAAC;AACjD,YAAI,KAAK,GAAG;AACT,iBAAO,MAAM,GAAG;AACpB,kBAAM;AACC,gBAAI,KAAK,QAAQ,EAAE,GAAG;AAC1B,mBAAK,UAAU,KAAK,UAAU,MAAM,IAAI;AAAA,YAC3C;AAAA,UACI;AAAA,QACH;AAGA,iBAASA,KAAI,GAAG,KAAK,UAAUA,EAAC,KAAK,GAAGA,MAAM;AAC3C,cAAI,IAAI,IAAI,KAAK,UAAUA,EAAC;AAC5B,cAAI,KAAK,KAAK,MAAM,CAAC,GAAG;AACrB,mBAAO;AAAA,UACV;AAAA,QACH;AAEA,eAAO;AAAA,MACV;AAAA;AAAA;AAAA,MAKJ,YAAa,SAAU,GACnB;AACG,YAAI,UAAU,IAAI,MAAM;AACxB,YAAI,IAAI,KAAK,KAAK,KAAK,MAAM,CAAC,GAC9B;AACG,iBAAO;AAAA,QACV;AAGA,YAAI,QAAQ,CAAC,GAAG;AACb,kBAAQ,QAAQ,MAAM,IAAI;AAC1B,iBAAO;AAAA,QACV;AAIA,YAAI,QAAQ;AACZ,YAAI,YAAY;AAChB,eAAO,aAAa,CAAE,QAAQ,CAAC,GAAG;AAC/B,cAAI,IAAI,IAAI,UAAU,KAAK;AAC3B,cAAI,KAAK,KAAK,MAAM,CAAC,GAAG;AACrB,gBAAI,UAAU,KAAK,KAAK,QAAQ,QAAQ,SAAS,CAAC,GAAG;AACzD,sBAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK;AAAA,YAC5C;AACA,gBAAI;AACJ,wBAAY;AAAA,UACR,OAAO;AACJ;AACP,wBAAY;AAAA,UACR;AAAA,QACH;AACA,YAAI,KAAK,QAAQ,QAAQ,SAAS,CAAC,GAAG;AACnC,kBAAQ,QAAQ,MAAM,IAAI;AAAA,QAC7B;AAEA,eAAO;AAAA,MACV;AAAA;AAAA;AAAA;AAAA,MAOJ,WAAY,SAAU,GAAG,GACrB;AACG,YAAI,eAAe,IAAI,MAAM;AAC7B,YAAI,kBAAkB,IAAI,MAAM;AAChC,YAAI,YAAY,OAAO,YAAY;AAEnC,YAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,CAAC,KAAK,KAAK,KAAK,MAAM,CAAC,GAAG;AAC7D,iBAAO;AAAA,QACV;AACA,YAAI,KAAK,KAAK,KAAK,GAAG;AACnB,iBAAO;AAAA,QACV;AAIA,iBAASA,KAAI,GAAGA,KAAI,gBAAgB,QAAQA,MAAM;AAC/C,cAAI,gBAAgBA,EAAC,KAAK,GAAG;AAC1B,wBAAY,aAAaA,EAAC;AAAA,UAC7B;AACA,cAAI,gBAAgBA,EAAC,KAAK,GAAG;AAC1B,wBAAY,aAAaA,EAAC;AAAA,UAC7B;AAAA,QACH;AAGA,YAAI,CAAE,WAAW;AACd,sBAAY,KAAK,WAAW,CAAC;AAAA,QAChC;AACA,YAAI,CAAE,WAAW;AACd,sBAAY,KAAK,WAAW,CAAC;AAAA,QAChC;AAGA,uBAAe,CAAC,WAAW,SAAS;AACpC,0BAAkB,CAAC,GAAG,CAAC;AAEvB,YAAI,QAAQ;AACZ,YAAI,QAAQ;AACZ,eAAO,QAAQ,UAAU,UAAU,QAAQ,UAAU,QACrD;AACG,cAAI,UAAU,KAAK,IAAI,UAAU,KAAK,GAAG;AACtC;AAAA,UACH,WAAW,UAAU,KAAK,IAAI,UAAU,KAAK,GAAG;AAC7C;AAAA,UACH,OAAO;AAEJ,mBAAO;AAAA,UACV;AAAA,QACH;AACA,eAAO;AAAA,MACV;AAAA,IACR;AAAA;AAAA;;;AClgBA;AAAA;AAeA,WAAO,UAAU,SAAS,SAAS,QAAQ,MAAM,MAAM,QAAQ,KAAK,OACpE;AACG,UAAI,cAAc;AAClB,UAAI,KAAK,KAAK,KAAK,OAAO;AAE1B,UAAI,OAAO,QAAS,YAAY,KAAK,UAAU,KAC3C,KAAK,YAAY,IAAI,OAAO,KAAK,YAAY,IAAI;AAClD,eAAO;AACV,aAAO,KAAK,YAAY;AAExB,UAAI,OAAO,UAAW,YAAY,OAAO,UAAU,KAC/C,OAAO,YAAY,IAAI,OAAO,OAAO,YAAY,IAAI;AACtD,iBAAS;AACZ,eAAS,OAAO,YAAY;AAE5B,UAAI,QAAQ,QACZ;AACG,iBAAS,OAAO,aAAa,KAAK,WAAW,CAAC,IAAI,CAAC;AACnD,YAAI,SAAS;AACV,mBAAS;AAAA,MACf;AAEA,UAAI,OAAO,OAAQ;AAChB,cAAM;AAET,YAAM,YAAY,kBAAkB,OAAO,GAAG;AAC9C,YAAM,IAAI,MAAM,GAAG,IAAI,MAAM;AAE7B,YAAM;AACN,YAAM;AACN,YAAM;AACN,eAASE,KAAI,GAAGA,KAAI,KAAK,QAAQA,MACjC;AACG,YAAI,KAAK,OAAOA,EAAC,EAAE,YAAY;AAC/B,YAAI,KAAK;AACN,cAAI;AAEP,YAAI,IAAI,QAAQ,CAAC,KAAK,GACtB;AACG,cAAI,KAAK,OAAOA,EAAC,KAAK,KAAK,OAAOA,EAAC,EAAE,YAAY;AACrD,mBAAO,EAAE,YAAY;AAAA;AAErB,mBAAO;AACV,cAAI,IAAI,UAAU,GAClB;AACG,oBAAQ,gBAAgB,QAAQ,KAAK,KAAK,KAAK;AAC/C,mBAAO,MAAM,OAAO,CAAC,IAAI,MAAM,MAAM,OAAO,CAAC;AAC7C,kBAAM;AACN,kBAAM;AAAA,UACT;AAAA,QACI,OAEA;AACG,cAAI,IAAI,SAAS,GACxB;AACG,mBAAO,KAAK,OAAOA,EAAC;AAAA,UACvB,OAEA;AACG,mBAAO,KAAK,OAAOA,EAAC;AAAA,UACvB;AAAA,QACI;AAAA,MACH;AACA,UAAI,IAAI,SAAS,GACjB;AACG,gBAAQ,gBAAgB,QAAQ,MAAM,KAAK,GAAG;AAC9C,eAAO,MAAM,OAAO,CAAC,IAAI,MAAM,MAAM,OAAO,CAAC;AAAA,MAChD;AAEA,aAAO;AAAA,IACV;AAIA,aAAS,gBAAgB,QAAQ,OAAO,KAAK,OAC7C;AACG,UAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAEhC,WAAK,MAAM,OAAO,CAAC;AACnB,WAAK,MAAM,OAAO,CAAC;AAEnB,WAAK;AACL,UAAI,MAAM,GAAG,YAAY,GACzB;AACG,aAAK,GAAG,YAAY;AACpB,aAAK;AAAA,MACR;AACA,WAAK;AACL,UAAI,MAAM,GAAG,YAAY,GACzB;AACG,aAAK,GAAG,YAAY;AACpB,aAAK;AAAA,MACR;AAEA,WAAK,IAAI,QAAQ,EAAE;AACnB,WAAK,KAAK,MAAM,KAAK,CAAC;AACtB,WAAK,KAAK;AAEV,WAAK,IAAI,QAAQ,EAAE;AACnB,WAAK,KAAK,MAAM,KAAK,CAAC;AACtB,WAAK,KAAK;AAEV,UAAI,MAAM,MAAM,MAAM,IACtB;AAEG,aAAK,QAAQ,MAAS,GACtB;AACG,gBAAM;AACN,gBAAM;AACN,gBAAM;AACN,gBAAM;AAAA,QACT;AAAA,MACH,WACS,MAAM,IACf;AAEG,cAAM;AACN,cAAM;AAAA,MACT,WACS,MAAM,IACf;AAEG,cAAM;AACN,cAAM;AAAA,MACT,OAEA;AAEG,YAAI;AACJ,YAAI;AACJ,aAAK;AACL,aAAK;AAAA,MACR;AAGA,YAAM,KAAK,KAAK;AAChB,YAAM,KAAK,KAAK;AAChB,YAAM,KAAK,KAAK;AAChB,YAAM,KAAK,KAAK;AAEhB,WAAK,IAAI,OAAO,KAAK,IAAI,EAAE;AAC3B,WAAK,IAAI,OAAO,KAAK,IAAI,EAAE;AAE3B,UAAI;AACD,aAAK,GAAG,YAAY;AACvB,UAAI;AACD,aAAK,GAAG,YAAY;AAEvB,aAAO,KAAK;AAAA,IACf;AAAA;AAAA;;;ACpKA,IAAAC,oBAAA;AAAA;AAEA,QAAI,WAAW;AAEf,WAAO,UAAU;AAAA,MACf,UAAU,SAAU,IAAG,KAAK;AAI1B,YAAI,WAAW,CAAC;AAChB,iBAASC,KAAI,GAAGA,KAAI,GAAG,QAAQA,MAAK,GAAG;AAErC,cAAI,UAAU,GAAG,MAAMA,IAAGA,KAAE,CAAC;AAI7B,cAAI,QAAQ,OAAO,CAAC,MAAM,IAAI;AAC5B,sBAAU,QAAQ,OAAO,CAAC,IAAI;AAAA,UAChC,WAAU,QAAQ,OAAO,CAAC,KAAK,QAAQ,OAAO,CAAC,GAAG;AAChD,sBAAU,QAAQ,OAAO,CAAC,IAAI;AAC9B,YAAAA,MAAK;AAAA,UACP;AAEA,mBAAS,KAAK,OAAO;AAAA,QACvB;AAEA,YAAG,SAAS,SAAS,GAAG;AACpB,iBAAO,SAAS,GAAE,SAAS,KAAK,GAAG,GAAE,KAAI,KAAI,GAAG;AAAA,QACpD;AAAA,MAEF;AAAA,MAEA,UAAU,SAAU,IAAG,KAAK;AAC1B,eAAO,SAAS,IAAG,IAAG,KAAI,KAAI,GAAG;AAAA,MACnC;AAAA,IACF;AAAA;AAAA;",
  "names": ["i", "j", "i", "require_playfair", "i"]
}
